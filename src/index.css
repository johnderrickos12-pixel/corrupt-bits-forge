@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Corrupt-Ware Dark + Kawaii Theme */
    --background: 240 20% 8%;
    --foreground: 280 20% 95%;

    --card: 240 25% 12%;
    --card-foreground: 280 20% 95%;

    --popover: 240 30% 10%;
    --popover-foreground: 280 20% 95%;

    /* Pastel Pink Primary */
    --primary: 340 100% 70%;
    --primary-foreground: 240 20% 8%;

    /* Mint Green Secondary */
    --secondary: 160 100% 75%;
    --secondary-foreground: 240 20% 8%;

    /* Lavender Accent */
    --accent: 270 60% 75%;
    --accent-foreground: 240 20% 8%;

    --muted: 240 20% 20%;
    --muted-foreground: 280 10% 60%;

    --destructive: 0 85% 60%;
    --destructive-foreground: 280 20% 95%;

    --border: 240 25% 18%;
    --input: 240 25% 15%;
    --ring: 340 100% 70%;

    --radius: 0.75rem;

    /* Gradients */
    --gradient-corruption: linear-gradient(135deg, hsl(340 100% 70%), hsl(270 60% 75%));
    --gradient-neon: linear-gradient(90deg, hsl(160 100% 75%), hsl(270 60% 75%));
    --gradient-glitch: linear-gradient(180deg, hsl(340 100% 70% / 0.2), transparent);

    /* Shadows */
    --shadow-neon: 0 0 20px hsl(340 100% 70% / 0.4);
    --shadow-glow: 0 0 40px hsl(160 100% 75% / 0.3);
    --shadow-corrupt: 0 10px 30px hsl(270 60% 75% / 0.3);

    /* Transitions */
    --transition-glitch: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-mono;
    background-image: url('https://i.imgur.com/PFtPhoC.jpeg');
    background-size: cover;
    background-attachment: fixed;
    background-position: center;
  }

  /* Glitch animation */
  @keyframes glitch {
    0% {
      transform: translate(0);
    }
    20% {
      transform: translate(-2px, 2px);
    }
    40% {
      transform: translate(-2px, -2px);
    }
    60% {
      transform: translate(2px, 2px);
    }
    80% {
      transform: translate(2px, -2px);
    }
    100% {
      transform: translate(0);
    }
  }

  /* Sparkle animation */
  @keyframes sparkle {
    0%, 100% {
      opacity: 0.4;
      transform: scale(0.8) rotate(0deg);
    }
    50% {
      opacity: 1;
      transform: scale(1.2) rotate(180deg);
    }
  }

  /* Fade in animation */
  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Float animation */
  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-15px);
    }
  }

  /* Neon pulse */
  @keyframes neon-pulse {
    0%, 100% {
      box-shadow: var(--shadow-neon);
    }
    50% {
      box-shadow: 0 0 30px hsl(340 100% 70% / 0.6);
    }
  }

  .glitch-text {
    animation: glitch 0.5s infinite;
  }

  .sparkle {
    animation: sparkle 1.5s ease-in-out infinite;
  }

  .neon-border {
    border: 2px solid hsl(var(--primary));
    box-shadow: var(--shadow-neon);
    animation: neon-pulse 2s ease-in-out infinite;
  }

  .animate-fade-in {
    animation: fade-in 0.6s ease-out forwards;
    opacity: 0;
  }

  .animate-float {
    animation: float 3s ease-in-out infinite;
  }

  .animate-neon-pulse {
    animation: neon-pulse 2s ease-in-out infinite;
  }

  .shadow-neon {
    box-shadow: var(--shadow-neon);
  }

  .shadow-glow {
    box-shadow: var(--shadow-glow);
  }

  .shadow-corrupt {
    box-shadow: var(--shadow-corrupt);
  }

  .hover\:scale-102:hover {
    transform: scale(1.02);
  }

  /* Smooth transitions for all interactive elements */
  button, a, .card {
    transition: var(--transition-glitch);
  }
}
